name: Create Release

on:
  push:
    branches:
      - release/**
    tags:
      - v[0-9]+.[0-9]+.[0-9]+**

concurrency:
  group: '${{ github.workflow}} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  release:
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checking out project
        uses: actions/checkout@v3
      
      - name: Setup JDK 17
        uses: actions/setup-java@v3.4.1
        with:
          java-version: 17
          distibution: zulu
          cache: maven

      - name: Parse Version from tags
        uses: actions/github-script@v6
        id: parse-tag-version
        with:
          result-encoding: string
          script: |
            const splitRef = github.ref.split('/')
            return splitRef[splitRef.length] - 1

      - name: Update package version to match tag
        run: mvn -B versions:set -DnewVersion=${{ steps.parse-tag-version.output.result }}

      - name: Build the Library Jar
        run: mvn -B package -f pom.xml

      - name: Build the Javadocs
        run: mvn -B javadoc:jar -f pom.xml

      - name: Creating artifact block
        run: mkdir artifact && cp target/*.jar artifact

      - name: Archive the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: SoulBound=${{ steps.parse-tag-version.output.result }}
          path: artifact/*
      
      - name: Create Github Release
        uses: actions/github-script@v6
        id: create-release
        env:
          TAG: ${{ steps.parse-tag-version.output.result }}
        with:
          script: |
            const source = require('./scripts/create-release.js')
            source({ github, context, core }, {
              tag: process.env.TAG
            })
      
      - name: Upload assets to release
        uses: actions/github-script@v6
        id: upload-assets
        env:
          TAG: ${{ steps.parse-tag-version.output.result }}
        with:
          script: |
            const source = require('./scripts/upload-release-assets')
            source({ core, github, require }, {
              file: 'artifact/*.jar'
              glob: true,
              tag: process.env.TAG
            })

      - name: 'Publish to github packages'
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      


      



      

