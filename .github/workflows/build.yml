name: Build Project

on:
  push:
    branches:
      - main
      - 'release/**'
    paths-ignore:
      - "**/*.md"
    tags-ignore:
      - v[0-9]+.[0-9]+.[0-9]+**

concurrency:
  group: '${{ github.workflow}} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  is_release: ${{ contains(github.ref, 'release') }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: 'Setup JDK 17'
        uses: actions/setup-java@v3.4.1
        with:
          java-version: 17
          distribution: 'zulu'
          cache: 'maven'
      
      - name: Build Library Jar
        run: mvn -B package -f pom.xml
      
      - name: Construction Javadocs
        run: mvn -B javadoc:jar -f pom.xml
      
      - name: Staging the Artifact Assets
        run: mkdir artifact && cp target/*.jar artifact
      
      - name: Generating the metadata for the assets
        id: get-version-string
        env: 
          BRANCH_NAME: ${{ github.ref_name }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const { BRANCH_NAME } = process.env

            core.info('Creating version string for assets...');

            if (BRANCH_NAME.startsWith('release')) {
              core.info('Release branch, taking version from branch name');
              return BRANCH_NAME.split('/')[1];
            }

            // Otherwise we are on the main branch and we need to construct a "nightly" release artifact tag
            // Nightly releases don't follow semantic versioning. Instead they follow the form <MajorVersion>.<increment>-nightly
            
            let versionString = '0.0-nightly';

            try {
              core.info('Main branch, creating version for nightly pacakge');
              const { artifacts } = await github.paginate(github.rest.actions.listAllArtifacts({
                owner: 'Sappyoak',
                repo: 'SoulBound'
              }))

              const filtered = artifacts.filter(artifact => artifact.name.includes("nightly"));
              if (filtered.length > 0) {
                const [mostRecent] = filtered.sort((a, b) => {
                  if (a.createdAt > b.createdAt) {
                    return 1;
                  }
                  if (a.createdAt < b.createdAt) {
                    return -1;
                  }
                  return 0;
                })

                let [firstDigit, secondDigit] = mostRecent.name.split('-')[0].split('.')
                
                secondDigit++
                versionString = `${firstDigit}.${secondDigit}-nightly`
              }
            } catch (err) {
              core.error('Had issues collecting the previous artifacts', err)
            }

            return versionString
        
      - name: Upload Project assets
        uses: actions/upload-artifact@v3
        with:
          name: SoulBound-${{ steps.get-version-string.outputs.result }}
          path: artifact/*


          
  




